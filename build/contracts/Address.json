{
  "contractName": "Address",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Address.sol\":{\"keccak256\":\"0x1e4d23751a55ce8f78530ea91fc862b7d9deca2f4e368984fc3ecbbb9ab94ba3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5e9bf6ca9de4f329c7b105e532c435231706aef3e03826ea30ca5727672a6aa9\",\"dweb:/ipfs/Qmc7u5rHgTvrFN5bybScVdCWAtsWkJ5cotQDp9a4U8PLfk\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ffaaecca0ac2f4eef8cf8b373ff853a341d241d68ce1dd23c0673563d4cf537c64736f6c63430008120033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ffaaecca0ac2f4eef8cf8b373ff853a341d241d68ce1dd23c0673563d4cf537c64736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "133:1148:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "133:1148:0:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * This test is non-exhaustive, and there may be false-negatives: during the\n     * execution of a contract's constructor, its address will be reported as\n     * not containing a contract.\n     *\n     * > It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Converts an `address` into `address payable`. Note that this is\n     * simply a type cast: the actual underlying value is not changed.\n     */\n    function toPayable(address account) internal pure returns (address payable) {\n        return payable(account);\n    }\n}\n",
  "sourcePath": "/home/robert/projects/mintable-erc223/contracts/Address.sol",
  "ast": {
    "absolutePath": "project:/contracts/Address.sol",
    "exportedSymbols": {
      "Address": [
        34
      ]
    },
    "id": 35,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Address",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 2,
          "nodeType": "StructuredDocumentation",
          "src": "65:67:0",
          "text": " @dev Collection of functions related to the address type"
        },
        "fullyImplemented": true,
        "id": 34,
        "linearizedBaseContracts": [
          34
        ],
        "name": "Address",
        "nameLocation": "141:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "647:347:0",
              "statements": [
                {
                  "assignments": [
                    11
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11,
                      "mutability": "mutable",
                      "name": "size",
                      "nameLocation": "852:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "844:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "844:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "844:12:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "931:32:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "933:28:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "account",
                              "nodeType": "YulIdentifier",
                              "src": "953:7:0"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "941:11:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "941:20:0"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "933:4:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 5,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "953:7:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 11,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "933:4:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 13,
                  "nodeType": "InlineAssembly",
                  "src": "922:41:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "979:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "986:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "979:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9,
                  "id": 17,
                  "nodeType": "Return",
                  "src": "972:15:0"
                }
              ]
            },
            "documentation": {
              "id": 3,
              "nodeType": "StructuredDocumentation",
              "src": "155:421:0",
              "text": " @dev Returns true if `account` is a contract.\n This test is non-exhaustive, and there may be false-negatives: during the\n execution of a contract's constructor, its address will be reported as\n not containing a contract.\n > It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract."
            },
            "id": 19,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "590:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "609:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "601:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "600:17:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "641:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "640:6:0"
            },
            "scope": 34,
            "src": "581:413:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "1239:40:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1264:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 28,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1256:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 27,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1256:8:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1256:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 26,
                  "id": 31,
                  "nodeType": "Return",
                  "src": "1249:23:0"
                }
              ]
            },
            "documentation": {
              "id": 20,
              "nodeType": "StructuredDocumentation",
              "src": "1000:158:0",
              "text": " @dev Converts an `address` into `address payable`. Note that this is\n simply a type cast: the actual underlying value is not changed."
            },
            "id": 33,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toPayable",
            "nameLocation": "1172:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1190:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "1182:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1181:17:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "1222:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1221:17:0"
            },
            "scope": 34,
            "src": "1163:116:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 35,
        "src": "133:1148:0",
        "usedErrors": []
      }
    ],
    "src": "40:1242:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-02-14T09:34:10.895Z",
  "devdoc": {
    "details": "Collection of functions related to the address type",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}